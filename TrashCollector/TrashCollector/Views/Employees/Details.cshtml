@model TrashCollector.Models.Customer

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ZipCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Balance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Balance)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PickUpDay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PickUpDay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsSuspended)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsSuspended)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ExtraPickUpDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ExtraPickUpDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PickUpCompleted)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PickUpCompleted)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SearchForPickUp)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SearchForPickUp)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ApplicationId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ApplicationId)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 400px; /* The width is the width of the web page */
    }
</style>
<div class="row">
    <div id="map"></div>
    <script>
        // Initialize and add the map
        function initMap() {
            // The location of Uluru
            var uluru = { lat: 43.0389, lng: -87.9065 };
            // The map, centered at Uluru
            var map = new google.maps.Map(
                document.getElementById('map'), { zoom: 11, center: uluru });
            // The marker, positioned at Uluru
            var marker = new google.maps.Marker({ position: uluru, map: map });
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=@APIKey.Key&callback=initMap">
    </script>
</div>